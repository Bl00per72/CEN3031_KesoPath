{"ast":null,"code":"var _jsxFileName = \"C:\\\\SWEProject\\\\my-app\\\\src\\\\frontend\\\\src\\\\Register\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport { blue } from '@mui/material/colors';\nimport TextField from '@mui/material/TextField';\nimport Button from \"@mui/material/Button\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  const paperStyle = {\n    padding: 20,\n    height: '70vh',\n    width: 280,\n    margin: \"20px auto\"\n  };\n  const avatarStyle = {\n    backgroundColor: blue[500]\n  };\n  let navigate = useNavigate();\n  const initialValues = {\n    fullName: '',\n    username: '',\n    password: ''\n  };\n\n  const onSubmit = (values, props) => {\n    // TODO: make backend call, create user profile, go back to homepage, else show error message\n    const registered = {\n      fullName: values.fullName,\n      username: values.username,\n      password: values.password\n    };\n    axios.post('http://localhost:4000/api/signup', registered).then(res => {\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n    setTimeout(() => {\n      props.resetForm();\n      props.setSubmitting(false);\n      navigate(\"/home\");\n    }, 1500);\n  };\n\n  const validationSchema = Yup.object().shape({\n    fullName: Yup.string().required('please enter your full name'),\n    username: Yup.string().email('please enter valid email').required('Required'),\n    password: Yup.string().required('Required')\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 10,\n      style: paperStyle,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        align: \"center\",\n        variant: \"h4\",\n        sx: {\n          padding: 2\n        },\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        onSubmit: onSubmit,\n        validationSchema: validationSchema,\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            label: \"Name\",\n            name: \"fullName\",\n            placeholder: \"Enter your full name\",\n            variant: \"standard\",\n            fullWidth: true,\n            required: true,\n            helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"fullName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            label: \"Username\",\n            name: \"username\",\n            placeholder: \"Enter a valid email\",\n            variant: \"standard\",\n            fullWidth: true,\n            required: true,\n            helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            label: \"Password\",\n            name: \"password\",\n            placeholder: \"Enter Password\",\n            variant: \"standard\",\n            type: \"password\",\n            fullWidth: true,\n            required: true,\n            helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            color: \"primary\",\n            variant: \"contained\",\n            disabled: props.isSubmitting,\n            sx: {\n              marginTop: 2\n            },\n            fullWidth: true,\n            children: props.isSubmitting ? \"Registering...\" : \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n/*\r\n<Typography align=\"center\" variant=\"h4\" sx={{ padding: 2 }}>Register</Typography>\r\n                <TextField label=\"Username\" placeholder=\"Enter Username\" variant=\"standard\" fullWidth required/>\r\n                <TextField label=\"Password\" placeholder=\"Enter Password\" variant=\"standard\" type=\"password\" fullWidth required/>\r\n                <Button type=\"submit\" color=\"primary\" variant=\"contained\" sx={{ marginTop: 2 }} fullWidth>Sign Up</Button>\r\n*/\n\n_s(Register, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/SWEProject/my-app/src/frontend/src/Register/Register.js"],"names":["React","Typography","Grid","Paper","blue","TextField","Button","useNavigate","Formik","Field","Form","ErrorMessage","Yup","axios","Register","paperStyle","padding","height","width","margin","avatarStyle","backgroundColor","navigate","initialValues","fullName","username","password","onSubmit","values","props","registered","post","then","res","console","log","data","catch","err","setTimeout","resetForm","setSubmitting","validationSchema","object","shape","string","required","email","isSubmitting","marginTop"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport { blue } from '@mui/material/colors';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from \"@mui/material/Button\"\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\n\r\nexport default function Register() {\r\n    const paperStyle={padding:20, height:'70vh', width:280, margin:\"20px auto\"};\r\n    const avatarStyle={backgroundColor:blue[500]};\r\n    let navigate = useNavigate();\r\n    const initialValues = {\r\n        fullName: '',\r\n        username: '',\r\n        password: '',\r\n    }\r\n    const onSubmit = (values, props) => {\r\n        // TODO: make backend call, create user profile, go back to homepage, else show error message\r\n        const registered = {\r\n            fullName: values.fullName,\r\n            username: values.username,\r\n            password: values.password,\r\n        }\r\n        axios.post('http://localhost:4000/api/signup', registered)\r\n        .then(res => {\r\n            console.log(res.data);\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n        setTimeout(() => {\r\n            props.resetForm()\r\n            props.setSubmitting(false)\r\n            navigate(\"/home\")\r\n        }, 1500)\r\n    }\r\n    const validationSchema = Yup.object().shape({\r\n        fullName: Yup.string().required('please enter your full name'),\r\n        username: Yup.string().email('please enter valid email').required('Required'),\r\n        password: Yup.string().required('Required')\r\n    })\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={10} style={paperStyle}>\r\n            <Typography align=\"center\" variant=\"h4\" sx={{ padding: 2 }}>Register</Typography>\r\n            <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n                {(props) => (\r\n                    <Form>\r\n                        <Field as={TextField} label=\"Name\" name=\"fullName\" placeholder=\"Enter your full name\" variant=\"standard\" fullWidth required\r\n                        helperText={<ErrorMessage name=\"fullName\" />}\r\n                        />\r\n                        <Field as={TextField} label=\"Username\" name=\"username\" placeholder=\"Enter a valid email\" variant=\"standard\" fullWidth required\r\n                        helperText={<ErrorMessage name=\"username\" />}\r\n                        />\r\n                        <Field as={TextField} label=\"Password\" name=\"password\" placeholder=\"Enter Password\" variant=\"standard\" type=\"password\" fullWidth required\r\n                        helperText={<ErrorMessage name=\"password\" />}\r\n                        />\r\n                        <Button type=\"submit\" color=\"primary\" variant=\"contained\" disabled={props.isSubmitting} sx={{ marginTop: 2 }} fullWidth>{props.isSubmitting?\"Registering...\":\"Sign up\"}</Button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n     \r\n}\r\n\r\n/*\r\n<Typography align=\"center\" variant=\"h4\" sx={{ padding: 2 }}>Register</Typography>\r\n                <TextField label=\"Username\" placeholder=\"Enter Username\" variant=\"standard\" fullWidth required/>\r\n                <TextField label=\"Password\" placeholder=\"Enter Password\" variant=\"standard\" type=\"password\" fullWidth required/>\r\n                <Button type=\"submit\" color=\"primary\" variant=\"contained\" sx={{ marginTop: 2 }} fullWidth>Sign Up</Button>\r\n*/"]},"metadata":{},"sourceType":"module"}